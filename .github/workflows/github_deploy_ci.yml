name: CI pipeline
on:
  push:
    branches:
      - 'develop'
jobs:
  test:
    name: Testing - run unit and integration tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Generate gradle wrapper
        run: gradle wrapper
      - name: Run test
        run: ./gradlew clean test
  versioning:
    name: Update project version
    runs-on: ubuntu-latest
    needs: [ test ]
    env:
      BRANCH_NAME: develop
    steps:
      - uses: actions/checkout@v2
      - name: Generate gradle wrapper
        run: gradle wrapper
      - name: Update version of project
        run: ./gradlew incrementVersion
      - name: Export version
        run: echo "VERSION=$(./gradlew version | grep -v -m 1 "version")" >> $GITHUB_ENV
      - name: Commit version increment
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions'
          git add build.gradle
          git commit -m "version increment v${{ env.VERSION }} [skip ci]"
          git tag v${{ env.VERSION }}
          git push -f "https://LukaszKochaniak:${{ secrets.GITHUB_TOKEN }}@github.com/LukaszKochaniak/github-users-api" "HEAD:${{ env.BRANCH_NAME }}" --tags
  publish:
    name: Publish - GitHub Packages
    runs-on: ubuntu-latest
    needs: [ test, versioning ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Generate gradle wrapper
        run: gradle wrapper
      - name: Create executable jar
        run: ./gradlew publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  docker:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    needs: [ test, publish, versioning ]
    steps:
      - uses: actions/checkout@v2
      - name: Generate gradle wrapper
        run: gradle wrapper
      - name: Docker Hub Sign-in
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Export version
        run: echo "VERSION=$(./gradlew version | grep -v -m 1 "version")" >> $GITHUB_ENV
      - name: Build jar
        run: ./gradlew bootJar
      - name: Building Docker Image
        run: docker build -t ${{ secrets.DOCKER_REPO }}:develop .
      - name: Publish Docker Image
        run: docker push ${{ secrets.DOCKER_REPO }}:develop